/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
         if(head == null ){
            return true;
        }
        ListNode slow = head , fast = head;
        while(fast.next != null && fast.next.next != null){
            slow = slow.next;
            fast = fast.next.next;
        }
        ListNode rev = reverseList(slow.next);
        ListNode curr = head;
        while(rev != null){
            if(rev.val != curr.val){
                return false;
            }
            rev = rev.next;
            curr = curr.next;
        }
        return true;
    }
    static ListNode reverseList(ListNode pHead){
        ListNode prev = null;
        while(pHead != null){
            ListNode nex = pHead.next;
            pHead.next = prev;
            prev = pHead;
            pHead = nex;
        }
        pHead = prev;
        return pHead;
    }
        
}
