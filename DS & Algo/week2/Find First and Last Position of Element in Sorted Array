class Solution {
    public int[] searchRange(int[] nums, int target) {
        int fOcc = firstOcc(nums , target);
        int lOcc = lastOcc(nums , target);
        return new int[]{fOcc , lOcc} ;  
    }
    
    public int firstOcc(int nums[] , int target){
        int n = nums.length;
        int low = 0 , high = n-1;
        while(low <= high){
            int mid = (low + high)/2;
            if(nums[mid] == target){
                if(mid != 0 && nums[mid -1] == nums[mid]){
                    high = mid-1;
                }
                else{
                    return mid;
                }
            }
            else if(nums[mid] > target){
                high = mid -1;
            }
            else{
                low = mid +1;
            }
        }
        return -1;
    }
    
    public int lastOcc(int nums[] , int target){
        int n = nums.length;
        int low = 0 , high = n-1;
        while(low <= high){
            int mid = (low + high)/2;
            if(nums[mid] == target){
                if(mid != (n-1) && nums[mid + 1] == nums[mid]){
                    low = mid + 1;
                }
                else{
                    return mid;
                }
            }
            else if(nums[mid] > target){
                high = mid -1;
            }
            else{
                low = mid +1;
            }
        }
        return -1;
    }
}
